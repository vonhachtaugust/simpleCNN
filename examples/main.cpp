#include <iostream>#include <memory>#include <array>#include "../simpleCNN/core/framework/tensor_subtypes/3d_tensor.h"#include "../simpleCNN/core/framework/tensor.h"#include "../simpleCNN/core/framework/tensor_utils.h"#include "../simpleCNN/layers/convolutional_layer.h"#include "../simpleCNN/util/util.h"#include <cblas.h>using namespace std;using namespace simpleCNN;int main(){    // W1, H1, F, D1, K,    Convolutional_layer<> conv(3, 3, 2, 1, 1);    // Image    tensor_t image({3, 3, 1}, component_t::IN_DATA);    tensor_t* image_ptr = &image;    image.fill(-1.0f);    // Weights                            tensor_t weights({2, 2, 1}, component_t::WEIGHT);    tensor_t* weights_ptr = &weights;    weights.fill(0.0f);    // In-data    vec_tensor_ptr_t in_data({image_ptr, weights_ptr, nullptr});    // Out-data    tensor_t out_data_({2, 2, 1}, component_t::OUT_DATA);    out_data_.fill(-1.0f);    cout << out_data_;    tensor_t* out_data_ptr = &out_data_;    vec_tensor_ptr_t out_data({nullptr, out_data_ptr});    conv.forward_propagation(in_data, out_data);    cout << out_data_;    return 0;}